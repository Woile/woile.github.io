<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Willy's blog (Posts about python)</title><link>https://woile.github.io/</link><description></description><atom:link href="https://woile.github.io/categories/cat_python.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 15 Sep 2018 13:15:28 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Tutorial: writing my dreamt cli using decli</title><link>https://woile.github.io/posts/creating-a-small-git-like-cli-with-decli/</link><dc:creator>Woile</dc:creator><description>&lt;div&gt;&lt;p&gt;So for a long time I've been using different cli tools, mostly &lt;code&gt;argparse&lt;/code&gt; because this way I had zero dependencies, less worries.&lt;/p&gt;
&lt;p&gt;Other tools such as click or docopt, the way the code must be written, is not something I'm really fond of.&lt;/p&gt;
&lt;p&gt;Because of this, I created &lt;a class="reference external" href="https://github.com/Woile/decli"&gt;decli&lt;/a&gt;, which is a declarative command line utility. Super simple.
Which is basically a wrapper around argparse.
Just write a dict and you are ready to go.&lt;/p&gt;
&lt;p&gt;In this tutorial we are gonna try to simulate a &lt;em&gt;git command line tool&lt;/em&gt;.
Let's create a few commands which will just print a message.&lt;/p&gt;
&lt;p&gt;But we are gonna structure the code, the way I always wanted to hehe.&lt;/p&gt;
&lt;p&gt;The commands will be decoupled from the &lt;em&gt;command line interface&lt;/em&gt; (cli from now on).&lt;/p&gt;
&lt;p&gt;These are the git commands we are gonna cover:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
add
commit
push
&lt;/pre&gt;
&lt;p&gt;Our file structure will result in something like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git-demo
├── git
│   ├── commands
│   │   ├── __init__.py
│   │   ├── add.py
│   │   ├── commit.py
│   │   └── push.py
│   ├── __init__.py
│   └── __main__.py
└── pyproject.toml
&lt;/pre&gt;
&lt;p&gt;If you are gonna write code along with the tutorial, you can create those files already. You can skip the &lt;strong&gt;pyproject.toml&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The code for this tutorial is &lt;a class="reference external" href="https://github.com/Woile/decli-git-demo"&gt;hosted in github&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;Python3! Everything here is python3!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I like the new package manager &lt;code&gt;poetry&lt;/code&gt; which uses the new &lt;strong&gt;pyproject.toml&lt;/strong&gt; file. So let's install:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
poetry add decli
&lt;/pre&gt;
&lt;p&gt;Otherwise if you want to use pip:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m venv venv
source venv/bin/activate
pip install -U decli
&lt;/pre&gt;
&lt;div class="section" id="the-pyproject-toml-file"&gt;
&lt;h3&gt;The pyproject.toml file&lt;/h3&gt;
&lt;p&gt;If you haven't seen how a &lt;strong&gt;pyproject.toml&lt;/strong&gt; looks, it's something like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[tool.poetry]
name = "decli-git-demo"
version = "0.1.0"
description = "A git like demo"

[tool.poetry.dependencies]
python = "*"
decli = "^0.5.0"

[tool.poetry.dev-dependencies]
pytest = "^3.0"
flake8 = "^3.5"
mypy = "^0.620.0"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-the-interface"&gt;
&lt;h2&gt;Writing the interface&lt;/h2&gt;
&lt;p&gt;We are gonna write the &lt;strong&gt;cli&lt;/strong&gt; in the &lt;code&gt;___main__.py&lt;/code&gt; file, so we can treat the folder &lt;code&gt;git&lt;/code&gt; as a module.
Look at the file structure if in doubt.&lt;/p&gt;
&lt;p&gt;In order to use it as a module, we need to provide, to the python interpreter, the &lt;code&gt;-m&lt;/code&gt; flag.
Our resulting command would look something like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python -m git &amp;lt;top_level_arguments&amp;gt; &amp;lt;subcommand&amp;gt; &amp;lt;sub_arguments&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m git --debug commit --amend
&lt;/pre&gt;
&lt;p&gt;For the interface, using &lt;strong&gt;decli&lt;/strong&gt;, we need to create a dict. Let's dive into it.&lt;/p&gt;
&lt;div class="section" id="main-component"&gt;
&lt;h3&gt;Main component&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decli&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-4"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"prog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-5"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"These are common Git commands used in various situations"&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e5f19b268bd34444bc45280c361ab16e-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This part is the entrypoint of our cli.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;prog&lt;/code&gt; key is the name of the app, it will be used in the help information, same as &lt;code&gt;description&lt;/code&gt;.
Let's see how this works:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python -m git --help
usage: git [-h]

These are common Git commands used in various situations

optional arguments:
-h, --help  show this help message and exit
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="arguments"&gt;
&lt;h3&gt;Arguments&lt;/h3&gt;
&lt;p&gt;Let's add some global arguments, we want to have a &lt;code&gt;debug&lt;/code&gt; and a &lt;code&gt;version&lt;/code&gt;.
We are also going to add some code to handle the version flag.
And for now, if nothing is provided we'll print the args.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decli&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-5"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"prog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-6"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"These are common Git commands used in various situations"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-7"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"arguments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-8"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"-v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"--version"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"--debug"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-10"&gt;&lt;/a&gt;    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-16"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_55e728d6fdc94acd847ae21d0173eae1-20"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Let's take a look at the help, also to what happens when calling with the &lt;code&gt;version&lt;/code&gt; flag, and when nothing is provided.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python -m git --help
usage: git [-h] [-v] [--debug]

These are common Git commands used in various situations

optional arguments:
-h, --help     show this help message and exit
-v, --version
--debug
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
$ python -m git --version
0.1.0
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
$ python -m git
Namespace(debug=False, version=False)
&lt;/pre&gt;
&lt;p&gt;Awesome, this is looking promising.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="subcommands"&gt;
&lt;h3&gt;Subcommands&lt;/h3&gt;
&lt;p&gt;Last thing we are missing are the subcommands, we said we were gonna cover &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;, and &lt;code&gt;push&lt;/code&gt;.
Each one will have a unique argument. Each one will use a class that we are gonna implement next. So no output for now.&lt;/p&gt;
&lt;p&gt;Some extras:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;We are gonna print the help if nothing is provided&lt;/li&gt;
&lt;li&gt;We are gonna call a &lt;code&gt;run&lt;/code&gt; method from the class that we are gonna define next&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decli&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.commands&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Commit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Push&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-6"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"prog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"git"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-7"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"These are common Git commands used in various situations"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-8"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"arguments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"-v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"--version"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"--debug"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-12"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"subcommands"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-13"&gt;&lt;/a&gt;        &lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-14"&gt;&lt;/a&gt;        &lt;span class="s2"&gt;"commands"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-15"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-16"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"add"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-17"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Add file contents to the index"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-18"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"func"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-19"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"arguments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"--update"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-20"&gt;&lt;/a&gt;            &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-21"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-22"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"commit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-23"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Record changes to the repository"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-24"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"func"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Commit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-25"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"arguments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-26"&gt;&lt;/a&gt;                    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-27"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"--amend"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-28"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-29"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-30"&gt;&lt;/a&gt;                            &lt;span class="s2"&gt;"Replace the tip of the current "&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-31"&gt;&lt;/a&gt;                            &lt;span class="s2"&gt;"branch by creating a new commit."&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-32"&gt;&lt;/a&gt;                        &lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-33"&gt;&lt;/a&gt;                    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-34"&gt;&lt;/a&gt;                &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-35"&gt;&lt;/a&gt;            &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-36"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-37"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"push"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-38"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Update remote refs along with associated objects"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-39"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"func"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-40"&gt;&lt;/a&gt;                &lt;span class="s2"&gt;"arguments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-41"&gt;&lt;/a&gt;                    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-42"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"--tags"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-43"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"store_true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-44"&gt;&lt;/a&gt;                        &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-45"&gt;&lt;/a&gt;                            &lt;span class="s2"&gt;"All refs under refs/tags are pushed, in"&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-46"&gt;&lt;/a&gt;                            &lt;span class="s2"&gt;" addition to refspecs explicitly listed "&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-47"&gt;&lt;/a&gt;                            &lt;span class="s2"&gt;"on the command line."&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-48"&gt;&lt;/a&gt;                        &lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-49"&gt;&lt;/a&gt;                    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-50"&gt;&lt;/a&gt;                &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-51"&gt;&lt;/a&gt;            &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-52"&gt;&lt;/a&gt;        &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-53"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-54"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-55"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-56"&gt;&lt;/a&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cli&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-57"&gt;&lt;/a&gt;&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-58"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-59"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-60"&gt;&lt;/a&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"0.1.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-61"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-62"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-63"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# print help if no arguments are provided&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-64"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-65"&gt;&lt;/a&gt;    &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_help&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-66"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-67"&gt;&lt;/a&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-68"&gt;&lt;/a&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7ec54a33e5124c54a9e862011fab7aa6-69"&gt;&lt;/a&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;So this is how &lt;code&gt;___main__.py&lt;/code&gt; should look like.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-the-commands"&gt;
&lt;h2&gt;Writing the commands&lt;/h2&gt;
&lt;p&gt;So before, we left our application unfinished and not working, because it was missing the classes imported from the &lt;code&gt;commands&lt;/code&gt; folder.
If you haven't created the folder and the files yet, go and do it. Remember also to create the &lt;code&gt;___init__.py&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;It's interesting to observe how each class is unpacking the arguments that needs.&lt;/p&gt;
&lt;p&gt;Also, each class is a normal python class, there's nothing needed, really &lt;strong&gt;easy to test&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A better implementation could be made, of course, having a parent class defining the interface and handling global arguments, would be interesting.&lt;/p&gt;
&lt;div class="section" id="add"&gt;
&lt;h3&gt;Add&lt;/h3&gt;
&lt;p&gt;For &lt;code&gt;commands/app.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-4"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7f1959e6fe744a29a4aa8da77b27556a-8"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'running add... update: {self.update}, debug: {self.debug}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="commit"&gt;
&lt;h3&gt;Commit&lt;/h3&gt;
&lt;p&gt;For &lt;code&gt;commands/commit.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Commit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-4"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;amend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;amend&lt;/span&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_545ebc9361cc43bc9869230fc02a6029-8"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Commiting... debug: {self.debug}, amend: {self.amend}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="push"&gt;
&lt;h3&gt;Push&lt;/h3&gt;
&lt;p&gt;For &lt;code&gt;commands/push.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-4"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b21f332562be4cedbe4397f30f9d324d-8"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'Pushing... debug: {self.debug}, tags: {self.tags}'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="init"&gt;
&lt;h3&gt;Init&lt;/h3&gt;
&lt;p&gt;For &lt;code&gt;commands/__init__.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.add&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.commit&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Commit&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.push&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Push&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;__all__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-6"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'Add'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-7"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'Commit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-8"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'Push'&lt;/span&gt;
&lt;a name="rest_code_a61dc180368548339c2a3526d73b6d23-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="now-what"&gt;
&lt;h2&gt;Now what?&lt;/h2&gt;
&lt;p&gt;That's it, our application is completed, let's see some output results.&lt;/p&gt;
&lt;div class="section" id="providing-nothing"&gt;
&lt;h3&gt;Providing nothing&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ python -m git
usage: git [-h] [-v] [--debug] {add,commit,push} ...

These are common Git commands used in various situations

optional arguments:
-h, --help         show this help message and exit
-v, --version
--debug

main:
{add,commit,push}
    add              Add file contents to the index
    commit           Record changes to the repository
    push             Update remote refs along with associated objects
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="calling-add-commnand"&gt;
&lt;h3&gt;Calling add commnand&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ python -m git add
running add... update: False, debug: False
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="calling-commit-commnand-with-a-sub-argument"&gt;
&lt;h3&gt;Calling commit commnand with a sub-argument&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ python -m git commit --amend
Commiting... debug: False, amend: True
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="calling-push-commnand-with-global-and-a-sub-arguments"&gt;
&lt;h3&gt;Calling push commnand with global and a sub arguments&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ python -m git --debug push --tags
Pushing... debug: True, tags: True
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="help-for-one-of-the-commands"&gt;
&lt;h3&gt;Help for one of the commands&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ python -m git add --help
usage: git add [-h] [--update]

optional arguments:
-h, --help  show this help message and exit
--update
&lt;/pre&gt;
&lt;p&gt;And that's it, we have succesfully created a nice and mantainable cli.&lt;/p&gt;
&lt;p&gt;Also if you already have a project and you want to provide an interface, now you know how.&lt;/p&gt;
&lt;p&gt;Hope it was a useful reading.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git python decli cli tutorial programming</category><guid>https://woile.github.io/posts/creating-a-small-git-like-cli-with-decli/</guid><pubDate>Fri, 14 Sep 2018 17:33:02 GMT</pubDate></item><item><title>How to test Selenium scrapper with Python</title><link>https://woile.github.io/posts/how-to-test-selenium-scrapper/</link><dc:creator>Woile</dc:creator><description>&lt;div&gt;&lt;p&gt;This week I've been writing tests for &lt;a class="reference external" href="https://github.com/discov-r/pyinstamation"&gt;a project&lt;/a&gt; which is
using Selenium as a scrapper.&lt;/p&gt;
&lt;p&gt;As you may know, Selenium is a testing framework, it's intended to be used while writing tests,
not as a web crawler/scrapper.&lt;/p&gt;
&lt;p&gt;But you can. Why? Because it runs a browser, and the browser is the real sh*t, so the Javascript
gets executed, and we are happy. There are other solutions like &lt;a class="reference external" href="https://github.com/makinacorpus/spynner"&gt;Spynner&lt;/a&gt;
or writing the scrapper in pure Javascript, but I felt comfortable using Selenium this way.&lt;/p&gt;
&lt;div class="section" id="the-problem"&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;How do we &lt;strong&gt;test&lt;/strong&gt; this scrapper? I want it to have tests, damn!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="solution"&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Save the static content while running the scrapper, then, serve it with a very small http server
while testing. Yes, it's a bit tedious, but it delivers.&lt;/p&gt;
&lt;p&gt;When should you save?&lt;/p&gt;
&lt;p&gt;Whenever you need to. This is a good example:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_86c453193c1f401984ea8d2c05bbfc95-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'https://betterexplained.com/articles/why-do-we-multiply-combinations/'&lt;/span&gt;
&lt;a name="rest_code_86c453193c1f401984ea8d2c05bbfc95-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_86c453193c1f401984ea8d2c05bbfc95-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_86c453193c1f401984ea8d2c05bbfc95-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;save_current_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;page_source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Can I see the code of &lt;code&gt;save_current_state&lt;/code&gt;? Here you go:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.parse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;SAVE_SOURCE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;  &lt;span class="c1"&gt;# disable in production&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;TEST_LOCATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'tests/static'&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_current_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;SAVE_SOURCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-10"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TEST_LOCATION&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'source must be a string'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'.html'&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-18"&gt;&lt;/a&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-19"&gt;&lt;/a&gt;        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-20"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b1ee5191763424b88c2eaa6fea3f05c-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Notice how the url is used as the file name (safely parsed). This helps a lot to match urls.
But of course, a case where something custom is required may happen, so you can tune the server to
fit any case.&lt;/p&gt;
&lt;p&gt;And the python server? A minor modification from &lt;a class="reference external" href="https://realpython.com/blog/python/testing-third-party-apis-with-mock-servers/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.parse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;http.server&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HTTPServer&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;TEST_LOCATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'tests/static'&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MockServerRequestHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseHTTPRequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_set_headers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-14"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-15"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Set-Cookie'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'exampleid=c295IGVsIHVzdWFyaW8gZW5pdG8K'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-16"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'text/html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# change at will&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-17"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end_headers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-19"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@property&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TEST_LOCATION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'{0}.html'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-24"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_read_from_file_or_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-25"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-26"&gt;&lt;/a&gt;            &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-27"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;FileNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-28"&gt;&lt;/a&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-29"&gt;&lt;/a&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;404 Not Found!&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-30"&gt;&lt;/a&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-31"&gt;&lt;/a&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-32"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# needs an extra new line&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-33"&gt;&lt;/a&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-34"&gt;&lt;/a&gt;            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-35"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-36"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_GET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-37"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_set_headers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-38"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_read_from_file_or_404&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-39"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-40"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_POST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-41"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_set_headers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-42"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_read_from_file_or_404&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-43"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-44"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;log_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-45"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""Do not write log messages to std. Disable to see the requests."""&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-46"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-47"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-48"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-49"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_free_port&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-50"&gt;&lt;/a&gt;    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-51"&gt;&lt;/a&gt;    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-52"&gt;&lt;/a&gt;    &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsockname&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-53"&gt;&lt;/a&gt;    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-54"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-55"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-56"&gt;&lt;/a&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-57"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_mock_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-58"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-59"&gt;&lt;/a&gt;        &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_free_port&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-60"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mock_server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HTTPServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;MockServerRequestHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-61"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mock_server_thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mock_server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serve_forever&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-62"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mock_server_thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setDaemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mock_server_thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1b4acbcda9154d83abffa393d8e2a138-64"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'{hostname}:{port}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And finally the base test from which you will inherit, whenever you need to test the scrapper.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unittest&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;my_project&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tests&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;start_mock_server&lt;/span&gt;  &lt;span class="c1"&gt;# or where you saved it&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BaseScrapperTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-8"&gt;&lt;/a&gt;    &lt;span class="nd"&gt;@classmethod&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUpClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start_mock_server&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_f707887c1737413292ff69ca18ce8b98-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HOSTNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Take a look at that last line, your project must have a central point where the &lt;strong&gt;HOSTNAME&lt;/strong&gt; is set.
Before testing, you need to tell to your application to hit your localserver.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="final-notes"&gt;
&lt;h2&gt;Final notes&lt;/h2&gt;
&lt;p&gt;If you find hard to test some scrapper function, try dividing it into smaller functions, and testing
them individually.&lt;/p&gt;
&lt;p&gt;If a scrapper function does not include any condition, it's okay to &lt;code&gt;return True&lt;/code&gt; at the end,
and assert that boolean. If something goes wrong in the scrapper, we'll get noticied with an exception
and the test will throw an error. Also, if you wanted to &lt;a class="reference external" href="https://stackoverflow.com/a/4319870/2047185"&gt;receive a fail&lt;/a&gt;
instead of an error, which is more pythonic, you should do something like this in your test:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_69f5249ec9554c15a00ce94f93c7ae9e-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_69f5249ec9554c15a00ce94f93c7ae9e-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;users_from_github&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_69f5249ec9554c15a00ce94f93c7ae9e-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;ExceptionType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_69f5249ec9554c15a00ce94f93c7ae9e-4"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"users_from_github() raised ExceptionType unexpectedly!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Try isolating the scrapper as much as possible from the rest of your project, whenever you need
to use selenium, avoid including bussiness logic in it as well, this difficults testing and makes
the code quite confusing.&lt;/p&gt;
&lt;p&gt;Regards!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>selenium python testing</category><guid>https://woile.github.io/posts/how-to-test-selenium-scrapper/</guid><pubDate>Tue, 12 Sep 2017 14:38:40 GMT</pubDate></item><item><title>How to filter Polymorphic Models with Django Filters</title><link>https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/</link><dc:creator>Woile</dc:creator><description>&lt;div&gt;&lt;p&gt;As the title says, I needed a way to filter my polymorphic models using my already defined
&lt;code&gt;rest_framework.FilterSet&lt;/code&gt;, and as I didn't find much resources about it I'm sharing my experience here.&lt;/p&gt;
&lt;p&gt;First, let's talk about &lt;code&gt;django-polymorphic&lt;/code&gt; and &lt;code&gt;django-filters&lt;/code&gt;, what are these libraries for.&lt;/p&gt;
&lt;div class="section" id="django-polymorphic"&gt;
&lt;h2&gt;Django-polymorphic &lt;a class="footnote-reference" href="https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/#id3" id="id1"&gt;[1]&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
Simplifies using inherited models in Django projects. When a query is made at the base
model, the inherited model classes are returned.
&lt;/pre&gt;
&lt;p&gt;One of the most important things to understand of polymorphic is, that when you ask for the queryset of the parent, every element is represented with its children classes. Let's see this.&lt;/p&gt;
&lt;p&gt;I'll use the models examples provided by the &lt;a class="reference external" href="https://django-polymorphic.readthedocs.io/en/stable/"&gt;docs&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;polymorphic.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PolymorphicModel&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PolymorphicModel&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;topic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;start_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;finish_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArtProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;artist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ResearchProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_af07f8b614c4472ba8f442392c8f8469-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;supervisor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_182cdf4829534b9f98eee59f2745d777-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topic&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Department Party"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_182cdf4829534b9f98eee59f2745d777-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ArtProject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topic&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Painting with Tim"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;artist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"T. Turner"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_182cdf4829534b9f98eee59f2745d777-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ResearchProject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topic&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Swallow Aerodynamics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;supervisor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Dr. Winter"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_e1249f421c564d2187dc599fe81befd1-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_e1249f421c564d2187dc599fe81befd1-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topic&lt;/span&gt; &lt;span class="s2"&gt;"Department Party"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e1249f421c564d2187dc599fe81befd1-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ArtProject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topic&lt;/span&gt; &lt;span class="s2"&gt;"Painting with Tim"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;artist&lt;/span&gt; &lt;span class="s2"&gt;"T. Turner"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e1249f421c564d2187dc599fe81befd1-4"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ResearchProject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topic&lt;/span&gt; &lt;span class="s2"&gt;"Swallow Aerodynamics"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;supervisor&lt;/span&gt; &lt;span class="s2"&gt;"Dr. Winter"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;As you can see, this can be really helpful when using Django Rest Framework (DRF) and model inheritance.
It allows to use just one model, in this case &lt;code&gt;Project&lt;/code&gt;, in a &lt;code&gt;ModelViewSet&lt;/code&gt; and you will receive all the instances for &lt;code&gt;Project&lt;/code&gt;, &lt;code&gt;ArtProject&lt;/code&gt; and &lt;code&gt;ResearchProject&lt;/code&gt;. Take into account
that your serializer will have to handle the representation of each of the models.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="django-filter"&gt;
&lt;h2&gt;Django-filter &lt;a class="footnote-reference" href="https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
Is a generic, reusable application to alleviate writing some of the more mundane bits of view code. Specifically, it allows users to filter down a queryset based on a model’s fields.
&lt;/pre&gt;
&lt;p&gt;Fundamentally, when using django filters you'll want to create a class specifying the model's
fields by which a queryset can be filtered.&lt;/p&gt;
&lt;p&gt;Let's modified a bit the example of the &lt;a class="reference external" href="https://django-filter.readthedocs.io/en/latest/guide/usage.html"&gt;docs&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django_filters&lt;/span&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProjectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;django_filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FilterSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;topic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django_filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lookup_expr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'iexact'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt;
&lt;a name="rest_code_44b14603d8b44030999d0ccc35836034-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'start_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'finish_date'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;And the view should look something like:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9abe8e1b11eb45b7bd63529606f97bb7-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;project_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9abe8e1b11eb45b7bd63529606f97bb7-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProjectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_9abe8e1b11eb45b7bd63529606f97bb7-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_app/template.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'filter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Obviously, this will help reduce the amount of code written, and will be way easier to mantain.
The good thing about this library, and what matters to me the most, is that it has a great &lt;a class="reference external" href="https://django-filter.readthedocs.io/en/latest/guide/rest_framework.html"&gt;integration with DRF&lt;/a&gt; by providing a DRF-specific FilterSet and a filter backend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="filtering-by-a-polymorphic-model"&gt;
&lt;h2&gt;Filtering by a polymorphic model&lt;/h2&gt;
&lt;p&gt;As we stated at the beginning what I wanted to do is filter by a &lt;strong&gt;polymorphic model&lt;/strong&gt;, because we have different types of projects. This can be easily achieved by reading the docs, no seriously, by essentially using the &lt;code&gt;rest_framework.FilterSet&lt;/code&gt; and using a customized filter with &lt;a class="reference external" href="https://django-filter.readthedocs.io/en/latest/guide/usage.html#customize-filtering-with-filter-method"&gt;Filter.method&lt;/a&gt; in our FilterSet.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django_filters&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_subclasses_as_choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;choices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;subclass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="n"&gt;subclass&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-6"&gt;&lt;/a&gt;               &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;subclass&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;klass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__subclasses__&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;choices&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProjectFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;django_filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rest_framework&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FilterSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;project_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django_filters&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MultipleChoiceFilter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'project_type_filter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;get_subclasses_as_choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-14"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'topic'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'start_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'end_date'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-18"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;project_type_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-19"&gt;&lt;/a&gt;        &lt;span class="n"&gt;project_choices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_subclasses_as_choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;selected_projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;project_choices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-21"&gt;&lt;/a&gt;                             &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9b257a2964254627a639011b7439d5ff-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;selected_projects&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now, if our querystring includes a key &lt;code&gt;project_type&lt;/code&gt;, it will check if the values match any of
the choices and it will return the queryset filtered by the specified choices.
And that's it, we have successfully filtered polymorphic models. Now we just need to add &lt;code&gt;ProjectFilter&lt;/code&gt; to the &lt;code&gt;filter_class&lt;/code&gt; in the &lt;code&gt;viewsets.ModelViewSet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/django-polymorphic/django-polymorphic"&gt;https://github.com/django-polymorphic/django-polymorphic&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="https://github.com/carltongibson/django-filter"&gt;https://github.com/carltongibson/django-filter&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>api</category><category>django</category><category>django-rest-framework</category><category>drf</category><category>filters</category><category>polymorphic</category><category>python</category><guid>https://woile.github.io/posts/django-polymorphic-integration-with-django-filters/</guid><pubDate>Thu, 02 Mar 2017 23:58:22 GMT</pubDate></item></channel></rss>